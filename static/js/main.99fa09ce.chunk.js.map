{"version":3,"sources":["components/Form.js","actions/index.js","components/WeatherCard.js","components/ToggleTheme.js","App.js","reducers/placeReducer.js","reducers/placeDataReducer.js","reducers/themeReducer.js","reducers/index.js","store.js","index.js"],"names":["Form","place","useSelector","state","theme","dispatch","useDispatch","className","type","value","onChange","e","payload","updatePlace","target","onClick","fetch","then","res","json","data","console","log","updatePlaceData","WeatherCard","placeData","location","src","current","condition","icon","alt","temp_f","style","fontSize","text","name","wind_mph","humidity","precip_in","ToggleTheme","App","placeReducer","action","placeDataReducer","themeReducer","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.99fa09ce.chunk.js","sourcesContent":["import { useDispatch, useSelector} from 'react-redux';\nimport { updatePlace, updatePlaceData } from '../actions';\n\nconst Form = () => {\n    const place = useSelector((state) => state.place);\n    const theme = useSelector((state) => state.theme);\n    const dispatch = useDispatch(); \n\n    return (\n        <div className=\"container\">   \n            <div className=\"row\">   \n                <div className=\"col-12 form\">\n                    <input \n                        type=\"text\" \n                        value={place} \n                        onChange={(e) => {\n                            dispatch(updatePlace(e.target.value))\n                        }}\n                    />\n                    <button className={theme ? \"btn btn-light\" : \"btn btn-dark\"}\n                        onClick={() => {\n                            dispatch(updatePlaceData(place));\n                        }}\n                    >Get Weather\n                    </button>\n                </div>\n            </div> \n        </div> \n    )\n}\nexport default Form;\n","const updatePlace = (place) => {\n    return {\n        type: \"UPDATE_PLACE\",\n        payload: place,\n    }\n}\n\nconst updatePlaceData = (place) => {\n    return (dispatch) => {\n        fetch(\n            `https://api.weatherapi.com/v1/current.json?key=7d140da80fb446a894b155522213009&q=${place}`\n            )\n          .then(res => res.json())\n          .then((data) => {\n            console.log(data);\n            dispatch({\n                type: \"UPDATE_PLACE_DATA\",\n                payload: data\n            })\n          }); \n    }\n};\n\nconst toggleTheme = () => {\n    return {\n        type: \"TOGGLE_THEME\",\n    };\n};\n\nexport { updatePlace, updatePlaceData, toggleTheme };\n","import { useSelector } from 'react-redux';\n\nconst WeatherCard = () => {\n    const placeData = useSelector((state) => state.placeData);\n    const theme = useSelector((state) => state.theme);\n    return (\n        <div className=\"column\">\n            <div className=\"row\">\n                <div className=\"offset-md-4 col-12 col-md-4 weather\">\n                    <div className={ theme ? \"card dark\" : \" card\"}>\n                        { placeData.location ? (\n                            <div>\n                                <img src={placeData.current.condition.icon} alt=\"\" />\n                                <div className=\"temp\">{placeData.current.temp_f}Â°<span style={{fontSize: \"1.8rem\"}}>F</span></div>\n                                <div className=\"desc\">{placeData.current.condition.text}</div>\n                                <div className=\"place\">{placeData.location.name}</div>\n                                <div className=\"container\">  \n                                    <div className=\"row whp\">\n                                        <div className=\"col\">\n                                            <div className=\"title\">Wind</div>\n                                            <div className=\"data\">{placeData.current.wind_mph}<span className=\"unit\"> mph</span></div>\n                                        </div>\n                                        <div className=\"col\">\n                                            <div className=\"title\">Humidity</div>\n                                            <div className=\"data\">{placeData.current.humidity}<span className=\"unit\"> %</span></div>\n                                        </div>\n                                        <div className=\"col\">\n                                            <div className=\"title\">Precipitation</div>\n                                            <div className=\"data\">{placeData.current.precip_in}<span className=\"unit\"> in.</span></div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        ) : ( \n                            <h4>Please enter valid location</h4>\n                        )}\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default WeatherCard;","import { useDispatch, useSelector } from 'react-redux';\nimport { toggleTheme } from '../actions'\n\nconst ToggleTheme = () => {\n    const theme = useSelector(state => state.theme);\n    const dispatch = useDispatch();\n    return (\n        <div className=\"toggle-theme\">\n            <button className={ theme ? \"btn btn-light\" : \"btn btn-dark\"} onClick={() => {\n                dispatch(toggleTheme())\n            }}>\n                {theme ? \"Dark\" : \"Light\" }\n            </button>\n        </div> \n    )\n};\nexport default ToggleTheme;","import 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport Form from './components/Form';\nimport WeatherCard from './components/WeatherCard';\nimport ToggleTheme from './components/ToggleTheme'\nimport { useSelector } from 'react-redux';\n\n\nfunction App() {\n    \n    const theme = useSelector((state) => state.theme);\n    console.log(theme);\n    \n    return (\n        <div className={ theme ? \"App dark\" : \"App\"}>\n            <ToggleTheme />\n            <Form />\n            <WeatherCard />\n        </div>\n    );\n}\n\nexport default App;\n\n","const placeReducer = (state = \"\", action) => {\n    if (action.type === \"UPDATE_PLACE\") {\n        return action.payload;\n    }\n    return state;\n};\n\nexport default placeReducer;","const placeDataReducer = (state= {}, action) => {\n    if (action.type === \"UPDATE_PLACE_DATA\") {\n        return action.payload;\n    }\n    return state;\n}\n\nexport default placeDataReducer;","const themeReducer = ( state = false, action) => {\n    if (action.type === \"TOGGLE_THEME\") {\n        return !state;\n    }\n    return state;\n}\n\nexport default themeReducer;","import { combineReducers } from 'redux';\nimport placeReducer from './placeReducer';\nimport placeDataReducer from './placeDataReducer';\nimport themeReducer from './themeReducer';\n\n\nconst rootReducer = combineReducers({\n    place: placeReducer,\n    placeData: placeDataReducer,\n    theme: themeReducer,\n});\n\nexport default rootReducer;","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers'\n\nconst store = createStore(rootReducer, applyMiddleware(thunk));\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport store from './store';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}